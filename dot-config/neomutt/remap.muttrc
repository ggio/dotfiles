# ===== Key bindings ===== #

# Unbindings

bind index,pager    i		noop
bind index,pager    g	    	noop
bind index	    \Cf	    	noop
bind index,pager    M	    	noop
bind index,pager    C	    	noop
bind index,pager    .	    	noop

# General rebindings

bind index	    gg		first-entry
bind index 	    j		next-entry
bind index 	    k		previous-entry
bind attach	    <return>	view-mailcap
bind attach	    l		view-mailcap
bind editor	    <space>	noop
bind index	    G		last-entry
bind pager,attach   h		exit
bind pager	    j		next-line
bind pager 	    k 		previous-line
bind pager 	    l 		view-attachments
bind index 	    D 		delete-message
bind index 	    U 		undelete-message
bind index 	    L 		limit
bind index 	    h 		noop
bind index 	    l 		display-message
bind index,query    <space>	tag-entry
#bind browser	    h		goto-parent
macro browser	    h		'<change-dir><kill-line>..<enter>' "Go to parent folder"
bind index,pager    H		view-raw-message
bind browser	    l 		select-entry
bind browser	    gg		top-page
bind browser	    G		bottom-page
bind pager	    gg		top
bind pager	    G		bottom
bind index,pager,browser d	half-down
bind index,pager,browser u	half-up
bind index,pager    S		sync-mailbox
bind index,pager    R 		group-reply
bind index	    \031	previous-undeleted	# Mouse wheel
bind index 	    \005 	next-undeleted		# Mouse wheel
bind pager 	    \031 	previous-line		# Mouse wheel
bind pager 	    \005 	next-line		# Mouse wheel
bind editor	    <Tab>	complete-query

# ===== Sidebar mappings ===== #

bind index,pager    \Ck		sidebar-prev
bind index,pager    \Cj 	sidebar-next
bind index,pager    \Co 	sidebar-open
bind index,pager    \Cp 	sidebar-prev-new
bind index,pager    \Cn 	sidebar-next-new
bind index,pager    B		sidebar-toggle-visible

# ===== Notmuch mappings ===== #

# Folders handling

macro index,pager	ga	"<change-folder>Archive<enter>"		"go to [a]rchive"
macro index,pager	gc	"<change-folder>contas<enter>"		"go to [c]ontas"
macro index,pager	gC	"<change-folder>compras<enter>"		"go to [C]compras"
macro index,pager	gd	"<change-folder>drafts<enter>"		"go to [d]rafts"
macro index,pager	gf	"<change-folder>flagged<enter>"		"go to [f]lagged"
macro index,pager	gh	"<change-folder>semester^V hub<enter>"	"go to Semester [h]ub"
macro index,pager	Ch	"<copy-message>=Labels.Semester_hub<enter>"	"copy to Semester [h]ub"
macro index,pager	gi	"<change-folder>Inbox<enter>"		"go to [i]nbox"
macro index,pager   	Ci	";<copy-message>=INBOX<enter>"		"copy mail to inbox"
macro index,pager   	Mi	";<save-message>=INBOX<enter>"		"move mail to inbox"
macro index,pager	gj	"<change-folder>junk<enter>"		"go to [j]unk"
macro index,pager   	Cj	";<copy-message>=Labels.Junk<enter>"	"copy mail to junk"
macro index,pager   	Mj	";<save-message>=Labels.Junk<enter>"	"move mail to junk"
macro index,pager	gl	"<change-folder>^V ^V ---^V lists^V ---<enter>"	"go to [l]ists"
macro index,pager	gm	"<change-folder>spam<enter>"		"go to spa[m]"
macro index,pager   	Cm	";<copy-message>=Spam<enter>"		"copy mail to spam"
macro index,pager   	Mm	";<save-message>=Spam<enter>"		"move mail to spam"
macro index,pager	go	"<change-folder>to-do<enter>"		"go to T[o]-Do"
macro index,pager	Co	"<copy-message>=Labels.To-Do<enter>"	"copy to To-Do"
macro index,pager	gp	"<change-folder>mmhp<enter>"		"go to MMH[P]"
macro index,pager	gr	"<change-folder>unread<enter>"		"go to un[r]ead"
macro index,pager	gs	"<change-vfolder>sent<enter>"		"go to [s]ent"
macro index,pager	gt	"<change-folder>trash<enter>"		"go to [t]rash"
macro index,pager   	Ct	";<copy-message>=Trash<enter>"		"copy mail to trash"
macro index,pager   	Mt	";<save-message>=Trash<enter>"		"move mail to trash"
macro index,pager	gu	"<change-folder>unipac<enter>"		"go to [u]nipac"
macro index,pager	gv	"<change-folder>vet<enter>"		"go to [u]nipac"

# General

macro index		\\\\    "<vfolder-from-query>"			"looks up a hand made query"
bind index,pager .. modify-labels					# Manualy modify tags

# Folders and tags handling

# inbox
macro index,pager .i ";<modify-tags>+inbox<enter>"		    "tag as inbox"
macro index,pager .I ";<modify-tags>-inbox<enter>"		    "untag as inbox"

# (un)read
macro index,pager .r ";<modify-tags>-unread<enter>"		    "tag as read"

# todo
macro index,pager .o ";<modify-tags>+todo<enter>"		    "tag as todo"
macro index,pager .O ";<modify-tags>-todo<enter>"		    "untag as todo"

# drafts
macro index,pager .d ";<modify-tags>+draft -inbox<enter>"	    "tag as draft"
macro index,pager .D ";<modify-tags>-draft +inbox<enter>"	    "untag as draft"

# flagged
macro index,pager .f ";<modify-tags>+flagged<enter>"		    "tag as flagged"
macro index,pager .F ";<modify-tags>-flagged<enter>"		    "untag as flagged"

# sent

# contas
macro index,pager .c ";<modify-tags>+contas<enter>"		    "tag as contas"
macro index,pager .C ";<modify-tags>-contas<enter>"		    "untag as contas"

# mmhp
macro index,pager .p ";<modify-tags>+mmhp<enter>"		    "tag as mmhp"
macro index,pager .P ";<modify-tags>-mmhp<enter>"		    "untag as mmhp"

# unipac
macro index,pager .u ";<modify-tags>+unipac<enter>"		    "tag as unipac"
macro index,pager .U ";<modify-tags>-unipac<enter>"		    "untag as unipac"

# semester hub
macro index,pager .h ";<modify-tags>+hub<enter>"		    "tag as hub"
macro index,pager .H ";<modify-tags>-hub<enter>"		    "untag as hub"

# vet
macro index,pager .v ";<modify-tags>+vet<enter>"		    "tag as unipac"
macro index,pager .V ";<modify-tags>-vet<enter>"		    "untag as unipac"

# BIN
# trash
macro index,pager .d ";<modify-tags>+deleted -inbox -unread<enter>"	"tag as deleted"
macro index,pager .u ";<modify-tags>-deleted +inbox<enter>"		"untag as deleted"

# junk
macro index,pager .j ";<modify-tags>+junk -inbox -unread<enter>"    "tag as junk"
macro index,pager .J ";<modify-tags>-junk +inbox<enter>"	    "untag as junk"

# spam
macro index,pager .m ";<modify-tags>+spam -inbox -unread<enter>"    "tag as spam"
macro index,pager .M ";<modify-tags>-spam +inbox<enter>"	    "untag as spam"

# ===== Macros ===== #

# macro index \eg "<enter-command>unset wait_key<enter><shell-escape>gpg --list-secret-keys; printf 'Enter email ID of user to publish: '; read eID; printf 'Enter fingerprint of GPG key to publish: '; read eFGPT; $prefix/libexec/gpg-wks-client --create \\\$eFGPT \\\$eID | msmtp --read-envelope-from --read-recipients -a $fulladdr<enter>"  "publish GPG key to WKS provider"

macro index \eh "<pipe-message>$prefix/libexec/gpg-wks-client --receive | msmtp --read-envelope-from --read-recipients -a $fulladdr<enter>" "confirm GPG publication"

# Add current sender to address book
macro index,pager a "<enter-command>set my_pipe_decode=\$pipe_decode pipe_decode<return><pipe-message>abook --add-email<return><enter-command>set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>" "add the sender address to abook"
# macro index,pager  a "<pipe-message>abook --add-email-quiet<return>" "Add this sender to Abook"

macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"

# Find with notmuch
macro index \Cf "<enter-command>unset wait_key<enter><shell-escape>printf 'Enter a search term to find with notmuch: '; read x; echo \$x >\"\${XDG_CACHE_HOME:-\$HOME/.cache}/mutt_terms\"<enter><limit>~i \"\`notmuch search --output=messages \$(cat \"\${XDG_CACHE_HOME:-\$HOME/.cache}/mutt_terms\") | head -n 600 | perl -le '@a=<>;s/\^id:// for@a;$,=\"|\";print@a' | perl -le '@a=<>; chomp@a; s/\\+/\\\\+/g for@a; s/\\$/\\\\\\$/g for@a;print@a' \`\"<enter>" "show only messages matching a notmuch pattern"

macro index A "<limit>all\n" "show all messages (undo limit)"

# Quick html view macro
bind index,pager V  noop        ## Unbinds V from version
macro index,pager V "<view-attachments><search>html<enter><view-mailcap><exit>"

# Sync mailbox based on pressing $
macro index $ "<shell-escape>~/.config/neomutt/scripts/sync-macro.sh 2>&1<enter>" "Sync email and notmuch"

# Run "notmuch new"
macro index <F1> "<shell-escape>notmuch new<enter>" "Notmuch new"

# My adapted version version of mw mailsync
# macro index O "<shell-escape>~/.config/neomutt/scripts/mailsync.sh<enter>" "run mailsync to sync all mail"

# Send mails in markdown
# Adapted from: <https://tom.wemyss.net/posts/neomutt-markdown-email/>
# To avoid, pandoc error regarding title, one could include on second command <--metadata pagetitle=" ">
macro compose m \
    "<enter-command>set pipe_decode<enter>\
    <pipe-message>pandoc -f gfm -t plain -o /tmp/msg.txt<enter>\
    <pipe-message>pandoc -s -f gfm --embed-resources --standalone  -o /tmp/msg.html --resource-path ~/.config/neomutt/templates/ --template email<enter>\
    <enter-command>unset pipe_decode<enter>\
    <attach-file>/tmp/msg.txt<enter>\
    <attach-file>/tmp/msg.html<enter>\
    <tag-entry><previous-entry><tag-entry><group-alternatives>" \
    "Convert markdown to HTML5 and plaintext alternative content types"

# Simplified macro for pandoc convert
macro compose n "F pandoc -s -f markdown -t html \ny^T^Utext/html; charset=us-ascii\nn" "Convert from MD to HTML"

# vim: filetype=neomuttrc
